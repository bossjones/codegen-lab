[project]
name = "codegen-lab"
version = "0.1.0"
description = "Adobe Cursor Tools for Prompting"
readme = "README.md"
authors = [
    { name = "Malcolm Jones", email = "bossjones@theblacktonystark.com" }
]
requires-python = ">=3.12"
dependencies = [
    "better-exceptions>=0.3.3",
    "bpython>=0.25",
    "files-to-prompt>=0.4",
    "google-generativeai>=0.8.4",
    "llm>=0.19",
    "llm-anthropic>=0.12",
    "llm-cmd>=0.2a0",
    "llm-jq>=0.1.1",
    "llm-perplexity>=2025.2.0",
    "llm-python>=0.1",
    "llm-sentence-transformers>=0.2",
    "pillow>=11.1.0",
    "psutil>=5.9.5",
    "pydantic-settings>=2.8.1",
    "pytz>=2025.1",
    "rich>=13.9.4",
    "tenacity>=9.0.0",
    "ttok>=0.3",
    "tzlocal>=5.2",
]

[project.scripts]
codegen-lab = "codegen_lab.cli:main"
clctl = "codegen_lab.cli:main"

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

# UV Workspace Configuration
[tool.uv.workspace]
members = ["packages/*"]

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["codegen_lab"]

[dependency-groups]
dev = [
    "basedpyright>=1.28.1",
    "bpython>=0.25",
    "coverage[toml]>=7.6.12",
    "debugpy>=1.8.12",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.6",
    "pre-commit>=4.1.0",
    "pydocstyle>=6.3.0",
    "pylint-per-file-ignores>=1.4.0",
    "pylint-pydantic>=0.3.5",
    "pyright>=1.1.395",
    "pytest>=8.3.4",
    "pytest-aiohttp>=1.1.0",
    "pytest-aioresponses>=0.3.0",
    "pytest-asyncio>=0.25.3",
    "pytest-clarity>=1.0.1",
    "pytest-cov>=6.0.0",
    "pytest-freezegun",
    "pytest-httpx>=0.35.0",
    "pytest-ignore-flaky>=2.2.1",
    "pytest-memray>=1.7.0",
    "pytest-mock>=3.14.0",
    "pytest-recording>=0.13.2",
    "pytest-retry>=1.7.0",
    "pytest-skip-slow>=0.0.5",
    "pytest-skipuntil>=0.2.0",
    "pytest-structlog>=1.1",
    "pytest-sugar>=1.0.0",
    "pyupgrade>=3.19.1",
    "requests-mock>=1.12.1",
    "respx>=0.22.0",
    "ruff>=0.9.9",
    "tox-uv>=1.25.0",
    "types-aiofiles>=24.1.0.20241221",
    "types-beautifulsoup4>=4.12.0.20250204",
    "types-mock>=5.1.0.20240425",
    "types-requests>=2.32.0.20250301",
    "validate-pyproject[all,store]>=0.23",
    "watchdog[watchmedo]>=6.0.0",
]

[tool.uv.sources]
pytest-freezegun = { git = "https://github.com/bossjones/pytest-freezegun" }
cursor-rules-mcp-server = { workspace = true }

# Basic settings
[tool.ruff]
target-version = "py312"
line-length = 120
include = ["*.py", "*.pyi", "*.ipynb"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
src = ["src", "tests"]

# Linting settings
[tool.ruff.lint]
# Existing configuration
select = [
    "D", "E", "F", "UP", "B", "I", "S", "YTT", "A",
    "C4", "T10", "SIM", "C90", "W", "PGH", "RUF"
]
ignore = [
    # Existing ignores
    "B008", "D417", "E501", "UP006", "UP007", "S101", "N812",
    # New ignores from errors
    "D100", "D104", "D107", "D200", "D205", "D400", "D401", "D415",
    "UP035", "C901", "RUF013", "RUF015", "S603", "S607", "E722",
    "S110", "SIM102", "SIM118", "PGH003", "B904", "F841", "F401"
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Add per-file configurations
[tool.ruff.lint.per-file-ignores]
# Init files
"**/__init__.py" = ["F401", "D104"]
# Server/complex files
"**/fserver.py" = ["C901", "D205", "D200", "D400", "D415"]
"**/server.py" = ["B904", "PGH003"]
# Repository analysis
"**/repository_analyzer.py" = ["SIM102", "C901"]
# Template handling
"**/import_templates.py" = ["C901", "D401"]
