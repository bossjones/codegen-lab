# Basic site information
site_name: Codegen Lab # The name of your documentation site that appears in the header
site_description: AI-powered code generation tooling for efficient software development # Meta description for SEO
site_author: Malcolm Jones # Site author information
# For GitHub Pages deployment
site_url: https://bossjones.github.io/codegen-lab/docs # The canonical URL of your documentation site

# Repository information
repo_name: bossjones/codegen-lab # Display name for the repository link
repo_url: https://github.com/bossjones/codegen-lab # URL to your GitHub repository
edit_uri: edit/main/docs/ # Path to edit pages on GitHub

# URL configuration
use_directory_urls: true # Use URLs without .html (e.g., /example/ instead of /example.html)

# What files `mkdocs serve` should watch for changes and then reload
watch:
  - mkdocs_macro_plugin.py
  - docs_templates
  - src/codegen_lab
  - README.md
  - CHANGELOG.md
  - changes/
  - scripts/docs
# Navigation structure
# nav: # Define the navigation/menu structure
#   - Home: index.md # Homepage link
#   - Getting Started: getting-started.md # Getting started guide
#   - User Guide: # User guide section with nested pages
#       - Installation: user-guide/installation.md # Installation instructions
#       - Configuration: user-guide/configuration.md # Configuration guide
#       - Documentation Automation: user-guide/docs-automation.md # Documentation automation guide
#   - Development Tools: # Development tools section
#       - Cursor Rules: tools/cursor-rules.md # Cursor rules documentation
#       - UV Workspace: tools/uv-workspace.md # UV workspace documentation
#   - API Reference: api-reference.md # API documentation
#   - Troubleshooting: troubleshooting.md # Troubleshooting guide
#   - Contributing: contributing.md # Contribution guidelines
#   - Changelog: changelog.md # Version history

# # Theme configuration
# theme: # Theme settings
#   name: material # Use Material for MkDocs theme
#   palette: # Color scheme configuration
#     primary: indigo # Primary color
#     accent: indigo # Accent color
#   # features: # Theme feature flags
#   #   - navigation.instant # Enable instant loading of pages
#   #   - navigation.tracking # Enable URL tracking as you scroll
#   #   - navigation.expand # Auto-expand navigation sections
#   #   - navigation.indexes # Allow index pages for sections
#   #   - navigation.top # Add "back to top" button
#   #   - search.highlight # Highlight search results
#   #   - search.share # Enable search result sharing
#   #   - content.code.copy # Add copy button to code blocks
#   features:
#     - content.action.edit
#     - content.action.view
#     - content.code.copy # https://squidfunk.github.io/mkdocs-material/reference/code-blocks/#code-copy-button
#     - content.code.select # https://squidfunk.github.io/mkdocs-material/reference/code-blocks/#code-selection-button
#     - content.tooltips
#     - navigation.footer
#     - search.share
# Theme configuration
theme:
  name: material # Using Material for MkDocs theme
  font:
    code: JetBrains Mono # Monospace font for code blocks

  # Theme assets
  logo: images/logo.png # Site logo image
  favicon: images/logo.png # Browser favicon

  # Icon configurations for various UI elements
  icon:
    repo: fontawesome/brands/github # Repository icon
    edit: material/pencil # Edit page icon
    view: material/eye # View page icon
    # Admonition block icons
    admonition:
      note: octicons/tag-16
      abstract: octicons/checklist-16
      info: octicons/info-16
      tip: octicons/squirrel-16
      success: octicons/check-16
      question: octicons/question-16
      warning: octicons/alert-16
      failure: octicons/x-circle-16
      danger: octicons/zap-16
      bug: octicons/bug-16
      example: octicons/beaker-16
      quote: octicons/quote-16

  # Color scheme configuration
  palette:
    # Light mode configuration
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: deep purple
      accent: deep purple
      toggle:
        icon: material/lightbulb
        name: Switch to dark mode

    # Dark mode configuration
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: deep purple
      accent: deep purple
      toggle:
        icon: material/lightbulb-outline
        name: Switch to light mode

  # Feature flags for the theme
  features:
    - content.tabs.link # Enable linked tabs
    - search.highlight # Enable search result highlighting
    - search.suggest # Enable search suggestions
    - search.share # Enable sharing search results
    - content.action.edit # Enable edit button
    - navigation.tabs # Enable navigation tabs
    - navigation.indexes # Enable section index pages
    - navigation.top # Enable back-to-top button

# Plugin configuration
plugins: # Enable MkDocs plugins
  - autorefs # recommended by mkdocstrings
  - awesome-pages # https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin
  # - blog  # https://squidfunk.github.io/mkdocs-material/plugins/blog/
  - git-revision-date-localized:
      enable_creation_date: true
      type: datetime
  - git-authors
  - macros:
      module_name: mkdocs_macro_plugin # https://mkdocs-macros-plugin.readthedocs.io
      verbose: true
  - mermaid2 # https://mkdocs-mermaid2.readthedocs.io/
  # - mkdocs_apidoc  # https://ecurtin2.github.io/mkdocs-apidoc/
  # - towncrier
  - gen-files:
      scripts:
        - scripts/docs/gen_ref_pages.py
  - literate-nav:
      nav_file: summary.md
  # - mkdocstrings: # https://mkdocstrings.github.io/
  #     handlers:
  #       python:
  #         import:
  #           - https://docs.python.org/3/objects.inv # Imports the objects.inv file from the official Python documentation to enable cross-references.
  #           - https://installer.readthedocs.io/en/stable/objects.inv # demonstration purpose in the docs # Imports another objects.inv file, likely for demonstration, from a different documentation source.
  #           - https://mkdocstrings.github.io/autorefs/objects.inv # Imports the objects.inv file from the mkdocstrings autorefs documentation.
  #         paths: [src] # Specifies the source directory where Python modules are located.
  #         options:
  #           docstring_options:
  #             ignore_init_summary: true # Ignores the summary from the __init__ method's docstring.
  #           docstring_section_style: list # Sets the style for docstring sections to a list format.
  #           filters: ["!^_"] # Excludes any members that start with an underscore from the documentation.
  #           heading_level: 1 # Sets the base heading level for documented items to H1.
  #           inherited_members: false # Does not include inherited members in the documentation by default.
  #           merge_init_into_class: true # Merges the __init__ docstring into the class docstring.
  #           separate_signature: true # Displays the function or method signature separately from its documentation.
  #           show_root_heading: true # Shows a heading for the root-level module.
  #           show_root_full_path: false # Does not display the full path to the root module in the heading.
  #           show_signature_annotations: true # Displays signature annotations in the function signatures.
  #           show_symbol_type_heading: true # Shows a heading indicating the type of symbol being documented.
  #           show_symbol_type_toc: true # Includes symbol types in the table of contents.
  #           signature_crossrefs: true # Enables cross-references in signatures.
  #           summary: true # Displays a summary of each documented item.
  - mkdocstrings: # Enables the mkdocstrings plugin for automatic API documentation generation.
      # enabled: !ENV [ENABLE_MKDOCSTRINGS, true] # Activates the plugin based on the `ENABLE_MKDOCSTRINGS` environment variable, defaulting to `true` if not set.
      default_handler: python # Sets Python as the default handler for processing and rendering documentation.
      enable_inventory: true # Generates an inventory file for cross-referencing with other projects.
      handlers:
        python: # Configures the Python handler for mkdocstrings.
          paths: [src]
          import:
            - https://docs.python.org/3/objects.inv # Imports cross-reference data from the official Python documentation.
            - https://docs.aiohttp.org/en/stable/objects.inv # Imports cross-reference data from the aiohttp library documentation.
            - https://www.attrs.org/en/stable/objects.inv # Imports cross-reference data from the attrs library documentation.
            - https://multidict.readthedocs.io/en/stable/objects.inv # Imports cross-reference data from the multidict library documentation.
            - https://yarl.readthedocs.io/en/stable/objects.inv # Imports cross-reference data from the yarl library documentation.
          options:
            filters: ["!^_"] # Excludes members that start with an underscore from the documentation.
            heading_level: 3 # Starts headings at level 3 (e.g., `<h3>` in HTML).
            annotations_path: brief # Displays type annotations in a concise format.
            docstring_section_style: spacy # Uses a "spacy" style for organizing docstring sections.
            docstring_style: google # Parses docstrings using the "numpy" style format.
            inherited_members: false # Disables inclusion of inherited members in the documentation.
            merge_init_into_class: true # Combines `__init__` method docstrings into their class-level documentation.
            separate_signature: true # Displays function or method signatures separately from their descriptions.
            show_signature_annotations: true # Includes annotations in function signatures within the documentation.
            show_source: false # Hides links to source code files in the rendered documentation.
            show_submodules: false # Prevents submodules from being listed in the documentation output.
            signature_crossrefs: true # Enables cross-references within function or method signatures for better navigation.
            show_symbol_type_heading: true # Displays headings indicating the type of documented symbols (e.g., classes, functions).
            show_symbol_type_toc: true # Includes symbol types in the table of contents for better organization and navigation.
            #            show_root_toc_entry: false # (Commented out) Would disable adding a root entry to the table of contents if enabled.
            find_stubs_package: true # Searches for PEP 561 stub packages to enhance type hinting and documentation accuracy.
            extensions:
              - griffe_inherited_docstrings # Adds support for inherited docstrings using Griffe extensions for better clarity and completeness.

  - search # https://squidfunk.github.io/mkdocs-material/plugins/search/
  - tags # https://squidfunk.github.io/mkdocs-material/plugins/tags/
  # Want to have ezlinks after macros
  # because macros might return markup with ezlinks that we want expanded - e.g.: for people
  # - with-pdf  # Lets us export our docs site to a PDF file, which we can then feed to Acrobat Assistant FTW!
  - ezlinks # https://github.com/orbikm/mkdocs-ezlinks-plugin
  # - search # Enable search functionality
  # - macros:
  #     module_name: mkdocs_macro_plugin
  # - api-autonav:
  #   modules: ["src/codegen_lab"]
  #   nav_section_title: "API Reference"
  #   api_root_uri: "reference"
  #   nav_item_prefix: "<code class='doc-symbol doc-symbol-nav doc-symbol-module'></code>"
  #   exclude_private: true
  #   on_implicit_namespace_packge: "warn"
  - coverage:
      page_path: coverage # default
      html_report_dir: htmlcov # default

# Markdown extensions
# markdown_extensions: # Configure Markdown processing
#   - admonition # Enable admonitions (note, warning, etc.)
#   - codehilite # Enable code highlighting
#   - toc: # Table of contents settings
#       permalink: true # Add permalinks to headers
#   - pymdownx.highlight: # Python Markdown Extensions for code highlighting
#       anchor_linenums: true # Add anchors to line numbers
#   - pymdownx.inlinehilite # Enable inline code highlighting
#   - pymdownx.snippets # Enable code snippets inclusion
#   - pymdownx.superfences # Enable nested code blocks

# via hikari
markdown_extensions:
  # Basic markdown extensions
  - abbr # Abbreviations
  - admonition # Block-styled side content
  - attr_list # Add HTML attributes to elements
  - def_list # Definition lists
  - footnotes # Footnote references
  - meta # Metadata parsing
  - md_in_html # Markdown inside HTML
  - toc: # Table of contents
      permalink: "#" # Add permanent links to headers

  # Python Markdown Extensions (PyMdownx)
  - pymdownx.snippets # Include external files
  - pymdownx.caret # Superscript/insert text
  - pymdownx.details # Collapsible blocks
  - pymdownx.keys # Keyboard key styling
  - pymdownx.mark # Highlighted text
  - pymdownx.superfences: # Enhanced fenced code blocks
      # make exceptions to highlighting of code:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:mermaid2.fence_mermaid_custom

  - pymdownx.tilde # Subscript/delete text
  - pymdownx.emoji: # Emoji support
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.betterem: # Better emphasis handling
      smart_enable: all
  - pymdownx.tabbed: # Tabbed content
      alternate_style: true
      combine_header_slug: true
      slugify: !!python/object/apply:pymdownx.slugs.slugify
        kwds:
          case: lower
  - pymdownx.tasklist: # Task lists
      custom_checkbox: true
  - pymdownx.highlight:
  - pymdownx.inlinehilite
  - pymdownx.magiclink # Allows plain ol' URLs to be links
  - pymdownx.tabbed:
      alternate_style: true
  - tables

# markdown_extensions:

#   # Python Markdown
#   - toc:
#       permalink: true

#   # Python Markdown Extensions
#   - abbr
#   - admonition
#   - attr_list
#   - neoteroi.cards
#   - pymdownx.details
#   # ----------------------------------------------------
#   # Using with MkDocs
#   # This project uses these extensions with MkDocs to generate the documentation. It might not be obvious how to set the index or generator functions in MkDocs' YAML settings file, but it is actually pretty easy. The functions are referenced like you would import them in Python except you also append them with a special prefix to let the YAML module know that the setting value is a Python object. For instance, to specify the to_svg generator, you would simply reference it like this: !!python/name:pymdownx.emoji.to_svg (or you could use your own custom module 😉).

#   # markdown_extensions:
#   #   - pymdownx.emoji:
#   #       emoji_generator: !!python/name:pymdownx.emoji.to_svg
#   # ----------------------------------------------------
#   - pymdownx.emoji:
#       emoji_index: !!python/name:material.extensions.emoji.twemoji
#       emoji_generator: !!python/name:material.extensions.emoji.to_svg
#   - pymdownx.highlight:
#   - pymdownx.inlinehilite
#   - pymdownx.magiclink # Allows plain ol' URLs to be links
#   - pymdownx.snippets
#   - pymdownx.superfences:
#       # make exceptions to highlighting of code:
#       custom_fences:
#         - name: mermaid
#           class: mermaid
#           format: !!python/name:mermaid2.fence_mermaid_custom
#   - pymdownx.tabbed:
#       alternate_style: true
#   - tables

# Additional settings
extra: # Extra customization
  social: # Social links
    - icon: fontawesome/brands/github # GitHub icon from FontAwesome
      link: https://github.com/bossjones/codegen-lab # Link to GitHub profile/repo

# Footer configuration
copyright: Copyright &copy; 2023 - 2025 Malcolm Jones # Copyright notice in footer
