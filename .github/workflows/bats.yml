name: Bats Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  bats-test:
    runs-on: ubuntu-latest
    name: Run Bats Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bats and bats libs
        id: setup-bats
        uses: bats-core/bats-action@3.0.0
        with:
          support-path: "${{ github.workspace }}/scripts/tests/bats/libs/bats-support"
          assert-path: "${{ github.workspace }}/scripts/tests/bats/libs/bats-assert"
          detik-path: "${{ github.workspace }}/scripts/tests/bats/libs/bats-detik"
          file-path: "${{ github.workspace }}/scripts/tests/bats/libs/bats-file"

      - name: Run Bats tests
        shell: bash
        env:
          BATS_LIB_PATH: ${{ steps.setup-bats.outputs.lib-path }}
          TERM: xterm
          DRY_RUN: 1
        run: |
          # Create test helper directory if it doesn't exist
          mkdir -p scripts/tests/bats/helpers

          # Create test helper
          cat > scripts/tests/bats/helpers/test_helper.bash << 'EOL'
          #!/usr/bin/env bash

          # Load bats libraries
          BATS_LIB_PATH=${BATS_LIB_PATH:-"/usr/lib"}
          bats_load_library bats-support
          bats_load_library bats-assert
          bats_load_library bats-file
          bats_load_library bats-detik/detik.bash

          # Add any common test helper functions here
          setup() {
              # Common setup for all tests
              load 'test_helper'

              # Create temporary test directory
              TEST_TEMP_DIR="$(mktemp -d)"

              # Export any needed environment variables
              export TEST_TEMP_DIR
          }

          teardown() {
              # Clean up temporary test directory
              if [ -d "$TEST_TEMP_DIR" ]; then
                  rm -rf "$TEST_TEMP_DIR"
              fi
          }
          EOL

          # Make helper script executable
          chmod +x scripts/tests/bats/helpers/test_helper.bash

          # Run all bats tests using the run_tests.sh script if it exists
          if [ -f "scripts/tests/bats/run_tests.sh" ]; then
              ./scripts/tests/bats/run_tests.sh
          else
              # Otherwise, run tests directly
              find scripts/tests/bats -type f -name "*_test.bats" -print0 | xargs -0 bats --tap
          fi
