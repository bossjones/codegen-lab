name: Deploy Documentation

on:
  push:
    branches:
      - main
    paths:
      - "docs/**"
      - "mkdocs.yml"
      - ".github/workflows/deploy-docs.yml"
      - "Makefile.ci"
  # Allow manual workflow trigger
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    env:
      # Set GH_PAGER to prevent interactive output
      GH_PAGER: cat
      # No prompts in UV
      UV_NO_PROMPT: 1
      # Use project environment settings
      UV_PROJECT_ENVIRONMENT: true
    strategy:
      matrix:
        os: [ubuntu-latest]
        # Add macos-latest if needed: os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set shell path
        id: set-shell
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            echo "SHELL_PATH=/opt/homebrew/bin/zsh" >> $GITHUB_ENV
          else
            echo "SHELL_PATH=/bin/bash" >> $GITHUB_ENV
          fi
          echo "Shell path set to: $SHELL_PATH"

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          version: "0.6.3"

      - name: Display environment information
        run: |
          make -f Makefile.ci env-info

      - name: Install dependencies
        run: |
          make -f Makefile.ci ci-install

      - name: Build documentation
        run: |
          make -f Makefile.ci ci-docs

      - name: Configure git for deployment
        run: |
          # Create an empty .nojekyll file to disable Jekyll processing
          touch .nojekyll
          # Configure git user
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Deploy documentation
        run: |
          # Use makefile target for deployment
          make -f Makefile.ci docs-deploy

      - name: Prune cache
        run: uv cache prune --ci
